<?php

/**
 * @file
 * Contains iq_barrio_theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_theme().
 */
function iq_barrio_theme($existing, $type, $theme, $path) {
  return [];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function iq_barrio_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Alter login form and add own custom submit handler.
  $form['#submit'][] = '_iq_barrio_user_login_form_submit';
}

/**
 * Custom submit handler for login form.
 */
function _iq_barrio_user_login_form_submit($form, FormStateInterface $form_state) {
  $form_state->setRedirect('<front>');
}

/**
 * Implements hook_form_system_theme_settings_alter().
 */
function iq_barrio_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id = NULL) {
  $styleSettings = \Drupal::config('iq_barrio.settings')->get();
  $service = \Drupal::service('iq_barrio_helper.iq_barrio_service');
  $service->alterThemeSettingsForm($form, $styleSettings);
  $form['#submit'][] = 'iq_barrio_form_system_theme_settings_submit';
}

/**
 * Implements hook_form_system_theme_settings_submit().
 */
function iq_barrio_form_system_theme_settings_submit($form, FormStateInterface &$form_state) {
  $title_font = $form_state->getValue('title_font');
  $content_font = $form_state->getValue('content_font');

  if (strpos(strtolower($form_state->getValue('title_font')), 'regular')) {
    $title_font = trim(strstr($form_state->getValue('title_font'), 'regular', TRUE));
  }

  if (strpos(strtolower($form_state->getValue('content_font')), 'regular')) {
    $content_font = trim(strstr($form_state->getValue('content_font'), 'regular', TRUE));
  }

  $styles = $form_state->getValues();
  foreach ($styles as $stylingKey => $stylingValaue) {
    if ((strpos($stylingKey, 'opacity') !== FALSE) && !isset($stylingValaue)) {
      $styles[$stylingKey] = 1;
    }
  }

  $filename = __DIR__ . "/resources/sass/_definitions.scss";

  $service = \Drupal::service('iq_barrio_helper.iq_barrio_service');
  $service->writeDefinitionsFile($styles, $filename, __DIR__ . "/resources/sass/_template.scss.txt");

  // Call hook.
  \Drupal::moduleHandler()->invokeAll('iq_theme_settings', [$styles, $service]);

  if ($form_state->getValue('reset_css')) {
    $service->resetCSS();
  }
}
