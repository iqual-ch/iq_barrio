<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_theme().
 */
function iq_barrio_theme($existing, $type, $theme, $path) {
  return [];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function iq_barrio_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Alter login form and add own custom submit handler.
  $form['#submit'][] = '_iq_barrio_user_login_form_submit';
}

/**
 * Custom submit handler for login form.
 */
function _iq_barrio_user_login_form_submit($form, FormStateInterface $form_state) {
  $form_state->setRedirect('<front>');
}

/**
 * Implements hook_form_system_theme_settings_alter().
 */
function iq_barrio_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id = NULL) {
  $styleSettings = \Drupal::config('iq_barrio.settings')->get();
  $service = \Drupal::service('iq_barrio_helper.iq_barrio_service');
  $service->alterThemeSettingsForm($form, $styleSettings);
  $form['#submit'][] = 'iq_barrio_form_system_theme_settings_submit';
}

/**
 * Custom twig variable for current logged in user display name
 */
function iq_barrio_preprocess(&$variables, $hook, $info) {
  $user = $variables['user'];
  if ($user->isAnonymous()) {
    $variables['current_user_name'] = t('Anmelden/Konto erstellen');
  }
  else {
    $variables['current_user_name'] = $user->getDisplayName();
  }
}

/**
 * Implements hook_form_system_theme_settings_submit().
 */
function iq_barrio_form_system_theme_settings_submit($form, FormStateInterface &$form_state) {
  $title_font = $form_state->getValue('title_font');
  $content_font = $form_state->getValue('content_font');

  if (strpos(strtolower($form_state->getValue('title_font')), 'regular')) {
    $title_font = trim(strstr($form_state->getValue('title_font'), 'regular', TRUE));
  }

  if (strpos(strtolower($form_state->getValue('content_font')), 'regular')) {
    $content_font = trim(strstr($form_state->getValue('content_font'), 'regular', TRUE));
  }

  $styles = $form_state->getValues();
  foreach ($styles as $stylingKey => $stylingValaue) {
    if ((strpos($stylingKey, 'opacity') !== FALSE) && !isset($stylingValaue)) {
      $styles[$stylingKey] = 1;
    }
  }

  $filename = __DIR__ . "/resources/sass/_definitions.scss";

  $service = \Drupal::service('iq_barrio_helper.iq_barrio_service');
  $service->writeDefinitionsFile($styles, $filename);

  // Call hook.
  \Drupal::moduleHandler()->invokeAll('iq_theme_settings', [$styles, $service]);

  if ($form_state->getValue('reset_css')) {
    $service->resetCSS();
  }
}

/**
 * Implements hook_preprocess_commerce_order_receipt().
 */
function iq_barrio_preprocess_commerce_order_receipt(&$variables) {
  /** @var Drupal\commerce_order\Entity\OrderInterface $order */
  $order = $variables['order_entity'];
  $shipments = $order->get('shipments')->referencedEntities();
  /** @var \Drupal\commerce_shipping\Entity\Shipment $shipment */
  $shipment = reset($shipments);
  /** @var \Drupal\address\Plugin\Field\FieldType\AddressItem $address */
  $address = $shipment->getShippingProfile()->get('address')->first();
  if (!empty($address)) {
    $variables['full_name'] = $address->getGivenName() . ' ' . $address->getFamilyName();
    $countries = \Drupal\Core\Locale\CountryManager::getStandardList();
    $full_country_name =  $countries[$address->getCountryCode()]->__toString();
    $variables['shipping_address'] =  $address->getGivenName() . ' ' . $address->getFamilyName() . '<br />' . $address->getAddressLine1() . '<br />'  . $address->getPostalCode() . ' ' . $address->getLocality() . '<br/>' . $full_country_name;
  }
  $billing_profile = $order->getBillingProfile();
  $billing_address = $billing_profile->get('address')->first();
  $full_country_name =  $countries[$billing_address->getCountryCode()]->__toString();
  $variables['billing_address'] =  $billing_address->getGivenName() . ' ' . $billing_address->getFamilyName() . '<br />' . $billing_address->getAddressLine1() . '<br />'  . $billing_address->getPostalCode() . ' ' . $billing_address->getLocality() . '<br/>' . $full_country_name;
  if (!empty($shipment->get('shipping_method')->entity)) {
    $variables['shipping_method'] = $shipment->get('shipping_method')->entity->getName();
  }

  // https://drupal.stackexchange.com/questions/263652/how-to-get-the-customer-name-in-commerce-order-confirmation-e-mail
}
